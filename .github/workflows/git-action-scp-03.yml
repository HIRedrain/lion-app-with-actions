name: Build and Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout 코드
    - name: Checkout code
      uses: actions/checkout@v4

    # JDK 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Maven 빌드
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # jar 파일 이름 변경
    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    # 빌드된 jar 파일 확인
    - name: Check jar file
      run: ls ./target

    # Artifact로 업로드
    - name: Upload app.jar as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app.jar
        path: ./target/app.jar

    # Artifact 다운로드
    - name: Download app.jar from Artifact
      uses: actions/download-artifact@v3
      with:
        name: app.jar  # 업로드한 artifact 이름과 일치해야 함
        path: ./target  # 다운로드할 경로

    # EC2로 파일 전송 (SCP)
    - name: From Github Actions to AWS EC2 through SCP
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: ./target/app.jar  # 다운로드한 app.jar 경로
        target: /home/ubuntu/app

    # EC2에서 Java 실행
    - name: Connecting EC2 through SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script_stop: true
        script: |
          rm -rf /home/ubuntu/app/deploy
          mkdir -p /home/ubuntu/app/deploy
          mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
          sudo fuser -k -n tcp 8080 || true
          nohup java -jar /home/ubuntu/app/deploy/app.jar > /home/ubuntu/app/deploy/output.log 2>&1 &
