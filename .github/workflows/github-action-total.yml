name: Up-Down-EC2

on:
  workflow_dispatch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  upload-artifact:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Naming jar file
        run: mv ./target/*.jar ./target/app.jar

      - name: Check jar file
        run: ls ./target  # target 디렉토리 내에 파일들이 있는지 확인

      - name: Upload app.jar as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: ./target/app.jar  # 정확한 경로를 지정하여 업로드

  download-artifact:
    runs-on: ubuntu-latest
    needs: upload-artifact  # 업로드 작업이 완료된 후 실행

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app.jar
          path: ./downloads  # 다운로드된 파일이 저장될 경로 지정

      - name: From Github Actions to AWS EC2 through SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./downloads/app.jar  # 다운로드된 파일 경로
          target: /home/ubuntu/app

      - name: Connecting EC2 through SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/app/deploy
            mkdir /home/ubuntu/app/deploy
            mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
            cd /home/ubuntu/app/deploy
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar app.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/app
